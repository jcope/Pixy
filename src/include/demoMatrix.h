/*****************************************
 EMMA TECHNOLOGIES, L.L.C.
 Copyright (c) 2013.
 All Rights Reserved.
 *****************************************
 Purpose: We define all constant alphabet matrixes.
 ****************************************/
#ifndef ALPHABET_H
#define ALPHABET_H

#ifdef DEMO_SCROLL_TEXT

uint8_t pixy[64] = {
0,3,0,48,48,0,3,0,\
0,3,0,48,48,0,3,0,\
0,0,3,0,0,3,0,0,\
0,0,0,3,3,0,0,0,\
0,0,0,3,3,0,0,0,\
0,0,3,3,3,3,0,0,\
0,0,3,0,0,3,0,0,\
0,3,3,0,0,3,3,0};


const uint8_t pixy2[64] = {
0,3,0,12,12,0,3,0,\
0,3,0,12,12,0,3,0,\
0,0,3,0,0,3,0,0,\
0,0,0,3,3,0,0,0,\
0,0,0,3,3,0,0,0,\
0,0,3,3,3,3,0,0,\
0,0,3,0,0,3,0,0,\
0,3,3,0,0,3,3,0};

const uint8_t pixy3[64] = {
0,3,0,3,3,0,3,0,\
0,3,0,3,3,0,3,0,\
0,0,3,0,0,3,0,0,\
0,0,0,3,3,0,0,0,\
0,0,0,3,3,0,0,0,\
0,0,3,3,3,3,0,0,\
0,0,3,0,0,3,0,0,\
0,3,3,0,0,3,3,0};

uint8_t space[64] = {
0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0};

//[E]
uint8_t E[64] = {
0,0,3,3,3,3,0,0,\
0,3,0,0,0,0,0,0,\
0,3,0,0,0,0,0,0,\
0,3,0,0,0,0,0,0,\
0,3,3,3,0,0,0,0,\
0,3,0,0,0,0,0,0,\
0,3,0,0,0,0,0,0,\
0,0,3,3,3,3,0,0};

//[m]
uint8_t m[64] = {
0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,\
0,3,3,3,0,3,3,0,\
0,3,0,0,3,0,0,3,\
0,3,0,0,3,0,0,3,\
0,3,0,0,3,0,0,3,\
0,3,0,0,3,0,0,3};

//[a]
uint8_t a[64] = {
0,0,0,3,3,0,0,0,\
0,0,3,0,0,3,0,0,\
0,0,3,0,0,0,3,0,\
0,0,0,0,0,0,3,0,\
0,0,0,3,3,3,3,0,\
0,0,3,0,0,0,3,0,\
0,3,0,0,0,3,3,0,\
0,3,3,3,3,0,3,0};
/*
uint8_t T[64] = {
0,3,3,3,3,3,3,3,\
0,0,0,0,3,0,0,0,\
0,0,0,0,3,0,0,0,\
0,0,0,0,3,0,0,0,\
0,0,0,0,3,0,0,0,\
0,0,0,0,3,0,0,0,\
0,0,0,0,3,0,0,0,\
0,0,0,0,3,0,0,0};

uint8_t e[64] = {
0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,\
0,0,3,3,3,3,0,0,\
0,3,0,0,0,0,3,0,\
0,3,3,3,3,3,3,0,\
0,3,0,0,0,0,0,0,\
0,3,0,0,0,0,3,0,\
0,0,3,3,3,3,0,0};

uint8_t c[64] = {
0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,\
0,0,3,3,3,0,0,0,\
0,3,0,0,0,3,0,0,\
0,3,0,0,0,0,0,0,\
0,3,0,0,0,0,0,0,\
0,3,0,0,0,3,0,0,\
0,0,3,3,3,0,0,0};

uint8_t h[64] = {
0,3,0,0,0,0,0,0,\
0,3,0,0,0,0,0,0,\
0,3,0,0,0,0,0,0,\
0,3,0,0,0,0,0,0,\
0,3,3,3,3,0,0,0,\
0,3,0,0,0,3,0,0,\
0,3,0,0,0,3,0,0,\
0,3,0,0,0,3,0,0};
*/
#endif

#ifdef DEMO_NUMBER_CNT
//ONE [1]
uint8_t one[64] = {
0,0,0,48,0,0,0,0,\
0,0,48,48,0,0,0,0,\
0,48,0,48,0,0,0,0,\
0,0,0,48,0,0,0,0,\
0,0,0,48,0,0,0,0,\
0,0,0,48,0,0,0,0,\
0,0,0,48,0,0,0,0,\
0,48,48,48,48,48,0,0};
//TWO [2]
uint8_t two[64] = {
0,0,48,48,48,0,0,0,\
0,48,0,0,0,48,0,0,\
0,0,0,0,0,48,0,0,\
0,0,0,0,0,48,0,0,\
0,0,0,0,48,0,0,0,\
0,0,0,48,0,0,0,0,\
0,0,48,0,0,0,0,0,\
0,48,48,48,48,48,0,0};
//THREE [3]
uint8_t three[64] = {
0,0,12,12,12,0,0,0,\
0,12,0,0,0,12,0,0,\
0,0,0,0,0,12,0,0,\
0,0,0,12,12,0,0,0,\
0,0,0,12,12,0,0,0,\
0,0,0,0,0,12,0,0,\
0,12,0,0,0,12,0,0,\
0,0,12,12,12,0,0,0};
//Four [4]
uint8_t four[64] = {
0,0,0,3,3,3,0,0,\
0,0,3,3,3,3,0,0,\
0,3,3,0,3,3,0,0,\
3,3,0,0,3,3,0,0,\
3,3,3,3,3,3,3,3,\
0,0,0,0,3,3,0,0,\
0,0,0,0,3,3,0,0,\
0,0,0,0,3,3,0,0};
//Five [5]
uint8_t five[64] = {
0,3,3,3,3,3,3,0,\
0,3,0,0,0,0,0,0,\
0,3,0,0,0,0,0,0,\
0,3,0,0,0,0,0,0,\
0,3,3,3,3,3,0,0,\
0,0,0,0,0,0,3,0,\
0,3,0,0,0,0,3,0,\
0,0,3,3,3,3,0,0};
#endif

//Include Gaurd
#endif 